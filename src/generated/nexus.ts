/**
 * This file was automatically generated by Nexus 0.11.7
 * Do not make changes to this file directly
 */

import * as types from "../types"


declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  DeleteUserInput: { // input type
    id: string[]; // [ID!]!
  }
  UpdateUserInput: { // input type
    email?: string | null; // String
    name?: string | null; // String
    password?: string | null; // String
  }
  facebookLoginInput: { // input type
    accessToken: string; // String!
    userId: string; // String!
  }
  googleLoginInput: { // input type
    idToken: string; // String!
  }
  loginInput: { // input type
    email: string; // String!
    password: string; // String!
  }
  resetPasswordInput: { // input type
    newPassword: string; // String!
    resetPasswordLink: string; // String!
  }
  signupInput: { // input type
    email: string; // String!
    name: string; // String!
    password: string; // String!
  }
}

export interface NexusGenEnums {
}

export interface NexusGenRootTypes {
  AuthPayload: { // root type
    token: string; // String!
    user: NexusGenRootTypes['User']; // User!
  }
  MessagePayload: { // root type
    message: string; // String!
  }
  Mutation: {};
  Query: {};
  User: { // root type
    email: string; // String!
    id: string; // ID!
    isAdmin?: boolean | null; // Boolean
    name: string; // String!
  }
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
  DeleteUserInput: NexusGenInputs['DeleteUserInput'];
  UpdateUserInput: NexusGenInputs['UpdateUserInput'];
  facebookLoginInput: NexusGenInputs['facebookLoginInput'];
  googleLoginInput: NexusGenInputs['googleLoginInput'];
  loginInput: NexusGenInputs['loginInput'];
  resetPasswordInput: NexusGenInputs['resetPasswordInput'];
  signupInput: NexusGenInputs['signupInput'];
}

export interface NexusGenFieldTypes {
  AuthPayload: { // field return type
    token: string; // String!
    user: NexusGenRootTypes['User']; // User!
  }
  MessagePayload: { // field return type
    message: string; // String!
  }
  Mutation: { // field return type
    accountActivation: NexusGenRootTypes['MessagePayload']; // MessagePayload!
    deleteUsers: NexusGenRootTypes['MessagePayload']; // MessagePayload!
    facebookLogin: NexusGenRootTypes['AuthPayload']; // AuthPayload!
    forgotPassword: NexusGenRootTypes['MessagePayload']; // MessagePayload!
    googleLogin: NexusGenRootTypes['AuthPayload']; // AuthPayload!
    login: NexusGenRootTypes['AuthPayload']; // AuthPayload!
    resetPassword: NexusGenRootTypes['MessagePayload']; // MessagePayload!
    signup: NexusGenRootTypes['MessagePayload']; // MessagePayload!
    updateUser: NexusGenRootTypes['User']; // User!
  }
  Query: { // field return type
    allUsers: NexusGenRootTypes['User'][]; // [User!]!
    currentUser: NexusGenRootTypes['User']; // User!
  }
  User: { // field return type
    email: string; // String!
    id: string; // ID!
    isAdmin: boolean | null; // Boolean
    name: string; // String!
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    accountActivation: { // args
      token: string; // String!
    }
    deleteUsers: { // args
      ids: NexusGenInputs['DeleteUserInput']; // DeleteUserInput!
    }
    facebookLogin: { // args
      facebookLoginInput: NexusGenInputs['facebookLoginInput']; // facebookLoginInput!
    }
    forgotPassword: { // args
      email: string; // String!
    }
    googleLogin: { // args
      googleLoginInput: NexusGenInputs['googleLoginInput']; // googleLoginInput!
    }
    login: { // args
      loginInput: NexusGenInputs['loginInput']; // loginInput!
    }
    resetPassword: { // args
      resetPasswordInput: NexusGenInputs['resetPasswordInput']; // resetPasswordInput!
    }
    signup: { // args
      signupInput: NexusGenInputs['signupInput']; // signupInput!
    }
    updateUser: { // args
      updateUserInput: NexusGenInputs['UpdateUserInput']; // UpdateUserInput!
    }
  }
  Query: {
    allUsers: { // args
      searchNameString?: string | null; // String
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "AuthPayload" | "MessagePayload" | "Mutation" | "Query" | "User";

export type NexusGenInputNames = "DeleteUserInput" | "UpdateUserInput" | "facebookLoginInput" | "googleLoginInput" | "loginInput" | "resetPasswordInput" | "signupInput";

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = "Boolean" | "Float" | "ID" | "Int" | "String";

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: types.Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}